load(exporter.js)

mongoimport --db local --collection user --file C:\Users:\mondodb\user_dump.json --jsonArray;

queries
-----------
Not equal
{"user.profil.active":{$ne: "N"}}

Greater than/ less than
{userId: {$gte:100,$lte:400}}

like
{email: /aon/}

datematch
{createdOn: {$gte: new ISODate('2021-18-02T13:00.000+00.00)}}

case sensitive search
{email: {$regex: /p.kavichelvan@gmail.com/i}}

project
{email:1, name:1, _id:0}

db.users.aggregate(
[
    {
        '$match': {
            'userId': 12
        }
    },
    {
        '$unwind': {
            'path': '$profiles'
        }
    },
    {
        '$unwind': {
            'path': '$profiles.books'
        }
    },
    {
        '$match': {
            'profiles.books.name': {$in:["artistic-p1"]}
        }
    },
    {
        '$project': {
            email:1, 
            name:1, 
            _id:0
        }
    }
]);

group by
{
    _id: '$userId',
    count: {
        $sum:1
    }
}

multiple group by
{
    _id: {userId: '$userId',
    profiles: '$profiles.type'},
    count: {
        $sum:1
    }
}

lookup/ join two collections
[
    {
        '$lookup': {
            'from': 'user',
            'localField': 'userId',
            'foreignField': 'userId',
            'as': 'doc'
        }
    }, {
        '$match': {
            'doc.active': 'N'
        }
    }, {
        '$count': 'tot'
    }
]

{
    $and: [
        {
            createdAt: {
                $gte: '2021-18-02T13:00:00.000+00.00'
            }
        },
        {
            createdAt: {
                $lte: ''2021-18-03T13:00:00.000+00.00'
            }
        }
    ]
}

update queries
--------------
db.book.find({"email": "p.kavichelvan@gmail.com" });
db.book.insert({"email": "p.kavichelvan@gmail.com" },{name:'kavi'});

db.book.update(
    {},
    { $pull: {client: {id: 2}} },
    {multi: true}
);

db.book.update(
    { client:2},
    { $pull: {client: {id: 2}} },
    {multi: true}
);

db.book.update(
    {client: 2},
    { $set: {client: {id: 1}} },
    {multi: true}
);

db.book.update(
    {'client.profile.active': 'N', email: "p.kavichelvan@gmail.com"},
    { 
        $pull: {
            'client.$[].profile.$[].books': {
                bookId: {
                    $in: [34]
                }
            }
        }
    },
    {multi: true}
);

db.book.update(
    {"client.profile.bookId": {$in:[32,34]}},
    {$currentDate: {"updateTime": true},
    $set: {"client.profile.active": "N"}},
    {multi: true}
);

db.book.updateMany(
    {"client.profile.bookId": {$in:[32,34]}},
    {
        $currentDate: {"updateTime": true},
        $set: {"client.$[clientFltr].profile.$[].book.$[bookFltr].active" :"N"}
    },
    {
        arrayFilters: [
            {'cluebtFltr.id':2},
            {'bookFltr.bookId': {$in:[34,32]}}
        ],
        multi: true
    }    
);

doc size find
-----------
db.book.find().forEach(function (mapping) {
        var size = Object.bsonsize(mapping);
        //print("_id" + mapping._id);
        var sizeinKB = Math.round(size / (1024));
        var sizeinMB = Math.round(size / (1024 * 1024));

        if (sizeinMB > 15) {
            print(sizeinMB + 'MB(max 16MB)' + "user: " + mapping.userId + "user Name: " + mapping.name + 'Size: ' + sizeinKB + 'kb')
        }
    }
)

db.books.updateMany(
    {'books.author.id: {$in:[23,24]}},
    {
        $currentDate: {"updateOn": true},
        $push:{'books.$[].author.&[authorFltr].description': 
        {
            "id: 1,
            "name": "paramakudi",
            "genre": "thriller",
            "details": [ 
                {
                    "desc": "good author"
                }
            ]
            ,
            "id: 1,
            "name": "magudi",
            "genre": "crime",
            "details": [ 
                {
                    "desc": "good book"
                }
            ]    
        }
        }
    },
    {
        arrayFilters: [
            {'books.author.id': {$in:[23,24]}}
        ],
        multi: true
    }
);